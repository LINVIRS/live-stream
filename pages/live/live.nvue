<template>
	<view class="" style="background-color: rgb(0,0,0);" :style="'margin-top:' +  statusBarHeight + 'px'">
		<!-- 头部 -->
		<view style="position: fixed;left: 0;right: 0;" :style="'margin-top:'+statusBarHeight+'px'">
			<view style="height: 80rpx;" class="px-2 flex justify-between align-center">
				<view class="flex rounded-circle" style="width: 325rpx;background-color: rgba(0,0,0,0.4);">
					<view class="p">
						<image src="../../static/1.jpg" style="width: 70rpx;height: 70rpx;" class="rounded-circle" mode=""></image>
					</view>
					<view class="flex-1 flex flex-column justify-center">
						<text class="text-white font">陶然然</text>
						<text class="text-white font-sm">100</text>
					</view>
					<view class="p">
						<view class="rounded-circle flex align-center justify-center bg-main" style="width: 70rpx;height: 70rpx;">
							<text class="text-white">+</text>
						</view>
					</view>
				</view>
		
				<view class="flex rounded-circle" style="width: 324rpx;background-color: rgba(0,0,0,0.4);">
									<scroll-view scroll-y="true" class="flex flex-1" style="width: 75rpx;">
										<view class="p" v-for="(item,index) in list" :key="index">
											<image :src="item.avatar" style="width: 70rpx;height: 70rpx;" class="rounded-circle" mode=""></image>
										</view>
									</scroll-view>
									<view class="p">
										<view class="rounded-circle flex align-center justify-center bg-main" style="width: 70rpx; height: 70rpx;">
											<text class="text-white font-sm">{{ list.length }}</text>
										</view>
									</view>
								</view>
							

			</view>
		</view>
		<view style="height: 300rpx;"><gift ref="gift" style="position: absolute;"></gift></view>

		<view style="height: 400rpx;" :style="'margin-top:' + statusBarHeight + 'px'">
			<video :src="'https://wlcon.utools.club/live/' + detail.key + '.flv?sign=' + sign" autoplay controls="false" style="width: 100%;"></video>
		</view>

		<!-- 弹幕 -->
		<view style="position: fixed;bottom: 100rpx;left: 0;width: 750rpx;height: 400rpx;"><danmu ref="danmu"></danmu></view>

		<!-- 底部 -->
		<view style="height: 120rpx;" class="flex align-center justify-between fixed-bottom ">
			<view class="px-2">
				<view class="btn px-3" @click="openInput"><text class="text-white font">说点什么....</text></view>
			</view>
			<view class="flex align-center">
				<view class="btn btn-icon"><text class="iconfont text-white " style="font-size: 40rpx;">&#xe633;</text></view>
				<view class="btn btn-icon bg-main" @click="openGift"><text class="iconfont">&#xe67c;</text></view>
				<view class="btn btn-icon "><text class="iconfont text-white">&#xe7cd;</text></view>
				<view class="btn btn-icon  " @click="back"><text class="iconfont text-white">&#xe607;</text></view>
			</view>
		</view>
		<!-- 弹幕弹出层 -->
		<uni-popup type="bottom" ref="input">
			<view class="bg-white flex align-center px-3" style="height: 120rpx;">
				<input type="text" v-model="content" class="border rounded flex-1 px-3 font-md" placeholder="说点什么..." style="height: 80rpx;" />
				<view class="flex align-center justify-center py-2 px-2 ml-3 rounded" @click="submit" :class="content === '' ? 'bg-main-disabled' : 'bg-main'">
					<text class="font text-white">发送</text>
				</view>
			</view>
		</uni-popup>
		<!-- 礼物弹出层 -->
		<uni-popup type="bottom" ref="giftPoup">
			<view class="bg-white" style="width: 750rpx; height: 550rpx;">
				<view class="flex justify-between align-center" style="height: 100rpx;">
					<text class="text-main font-md ml-3">礼物</text>
					<view class="flex align-center justify-center" style="width: 100rpx; height: 100rpx;" @click="closeGift"><text class="iconfont">&#xe607;</text></view>
				</view>
				<swiper :indicator-dots="true" style="height: 350rpx;" class="border-bottom border-top" :duration="500">
					<swiper-item>
						<view class="flex flex-wrap">
							<view
								style="width: 187rpx; height: 175rpx;"
								class="flex flex-column justify-center align-center"
								v-for="(item, index) in gifts"
								:key="index"
								:class="giftActived === item.id ? 'border border-main' : ''"
								@click="giftActiveId = item.id"
							>
								<image :src="item.image" style="width: 100rpx; height: 100rpx;" class="rounded"></image>
								<view class="flex mt-1">
									<text class="text-warning font mr-1">{{ item.name }}</text>
									<text class="text-secondary font">{{ item.coin }}</text>
								</view>
							</view>
						</view>
					</swiper-item>
				</swiper>
				<view class="flex align-center justify-end" style="height: 100rpx;">
					<view class="flex align-center justify-center py-2 px-2 mr-3 rounded bg-warning" @click="openCoin"><text class="font">充值</text></view>
					<view class="flex align-center justify-center py-2 px-2 rounded bg-main" @click="sendGift"><text class="font text-white">发送</text></view>
				</view>
			</view>
		</uni-popup>
	</view>
</template>

<script>
import gift from '../../components/common/gift.vue';
import Danmu from '../../components/common/danmu.vue';
import uniPopup from '../../components/uni-ui/uni-popup/uni-popup.vue';
import MyGifts from '../../common/gift.js';
import $H from '../../common/request.js'
import $C from '../../common/config.js'
import {mapState} from 'vuex';
export default {
	components: { gift, Danmu, uniPopup },

     mounted() {
     	//加入直播间
		this.joinOrLeaveLive('join')
     },
	 destroyed(){
		 //离开直播间
		 this.joinOrLeaveLive('leave');
		 //移除全局事件
		 uni.$off('live',this.handleLiveEvent);
	 },
	data() {
		return {
			statusBarHeight: 0,
			content: '',
			gifts: [],
			giftActiveId: 0,
			live:'',
			detail:'',
			id:"",
			sign:'',
			list:[]
		};
	},
	onLoad(option) {
	
		let res = uni.getSystemInfoSync();
		this.statusBarHeight = res.statusBarHeight;
		this.gifts = MyGifts;
		this.id=option.id
		$H.get('/api/live/read/'+this.id).then(res=>{
			
			this.detail=res.data;
			this.sign=res.sign
		})
		//监听全局事件
		uni.$on('live',this.handleLiveEvent)
	},
	computed:{
		...mapState({
			socket:state=>state.socket,
			token:state=>state.token
		})
	},
	methods: {
		//处理直播间事件
		handleLiveEvent(e){
			let d =e.data;
			switch(e.type){
				case 'online':
				if(d.action==='join'){
					this.list=d.data
				}
				if(d.action==='leave'){
					console.log(1111)
					this.list=d.data
				}
				break;
				case 'comment':
				this.$refs.danmu.send({
					id:d.id,
					name:d.user.name,
					content:d.content
				})
				this.content=''
				this.$refs.input.close()
				break;
			default:
				break;
			}
		},
		//加入或者离开直播间
		joinOrLeaveLive(type){
			if(this.socket&&this.token){
				console.log(this.id)
				this.socket.emit(type+'Live',{
					live_id:this.id,
					token:this.token
				});
			}
		},
		//打开输入弹幕的对话框
		openInput() {
			this.$store.dispatch('authMethod',()=>{
				this.$refs.input.open();
			});
		},
		//提交发送弹幕信息
		submit() {
			if (this.content === '') {
				return uni.showToast({
					title:'评论内容·不能为空',
					icon:'none'
				});
			}
		if(!this.token&&!this.socket){
			uni.navigateTo({
				url:"../login/login"
			})
			return uni.showToast({
				title:"请登录",
				icon:'none'
			});
		}
		if(this.socket){
			this.socket.emit('comment',{
				live_id:this.id,
				data:this.content,
				token:this.token
			})
		}
		},
		//返回上一层页面
		back() {
			uni.navigateBack({
				delta: 1
			});
		},

		// 送礼物相关方法
		openGift() {
			this.$refs.giftPoup.open();
		},
		closeGift() {
			this.$refs.giftPoup.close();
		},
		sendGift() {
			if (this.giftActiveId === 0) {
				return uni.showToast({
					title: '请选择发送礼物',
					icon: 'none'
				});
			}
			let index = this.gifts.findIndex(item => item.id === this.giftActiveId);
			if (index === -1) {
				return;
			}
			let g = this.gifts[index];
			this.$refs.gift.send({
				userName: '王林',
				avatar: '',
				gift_name: g.name,
				gift_image: g.image,
				num: 10
			});
			this.closeGift();
		},
		openCoin() {
			uni.navigateTo({
				url: '../coin/coin'
			});
		}
	}
};
</script>

<style>
.btn {
	height: 80rpx;
	border-radius: 100rpx;
	background-color: rgba(255, 255, 255, 0.12);
	align-items: center;
	justify-content: center;
}
.btn-icon {
	width: 80rpx;
	margin-right: 20rpx;
}
</style>
